package templates

import (
    "fmt"
	"strings"
    "strconv"

    "go-router/models"
)

var dayNames = []string{
	"mandag",
	"tirsdag",
	"onsdag",
	"torsdag",
	"fredag",
	"lørdag",
    "søndag",
}

var bitToMonFirst = []int{6, 0, 1, 2, 3, 4, 5} 

func daysFromBitmask(mask int) string {
	if mask == 127 { // 0b1111111
		return "Alle dager"
	}

	// Extract days present in Monday-first order
	var days []int
	for i := 0; i < 7; i++ {
		bitIndex := (i + 1) % 7 // Monday=1, ..., Sunday=0
		if mask&(1<<bitIndex) != 0 {
			days = append(days, i) // store Monday-first index
		}
	}

	if len(days) == 0 {
		return ""
	}

	if len(days) == 1 {
		return dayNames[days[0]]
	}

	// Check for consecutive days (with wrap-around)
	isConsecutive := true
	for i := 1; i < len(days); i++ {
		if days[i] != (days[i-1]+1)%7 {
			isConsecutive = false
			break
		}
	}

	if isConsecutive {
		return fmt.Sprintf("%s - %s",
			dayNames[days[0]],
			dayNames[days[len(days)-1]],
		)
	}

	// Otherwise, list them
	var names []string
	for _, d := range days {
		names = append(names, dayNames[d])
	}
	return strings.Join(names, ", ")
}

templ BarPage(bar *models.Bar, hkeys []models.HappyKey, extra models.BarMetadata, user *models.User) {
    <section>
        <div>
            <h2>{bar.Name}</h2>
            if user.Admin {
                <a href={"/admin/update-bar/" + strconv.Itoa(int(bar.ID))}>Rediger</a>
            }
            <p><span id={"regular_price"}>{bar.Price}</span>,- for {strconv.FormatFloat(bar.Size, 'f', 1, 64)}l</p>
            if bar.Pint != bar.Price {
                <p>*Tilsvarer <span id={"regular_pint"}>{bar.Pint}</span>,- for en halvliter</p>
            }
			<p>Pris sjekket: <span id={"regular_checked"}>{FormatNorwegianDate(bar.PriceChecked)}</span></p>
			<button
				class={btnPrimary}
				hx-get={fmt.Sprintf("/logic/price-confirmer?type=bar&id=%d", bar.ID)}
				hx-swap="innerHTML"
				hx-target="#pop-up"
			>Prisen stemmer</button>
			<button
				class={btnSecondary}
				hx-get={fmt.Sprintf("/logic/price-updater?type=bar&id=%d&size=%s", bar.ID, strconv.FormatFloat(bar.Size, 'f', 1, 64))}
				hx-swap="innerHTML"
				hx-target="#pop-up"
			>Prisen er feil</button>
            <p>Bryggeri: <span id="brewery">{bar.Brewery}</span></p>
            if bar.Brewery == "Ukjent" {
                <button
					class={btnPrimary}
					hx-get={"/logic/brewery-picker?id=" + strconv.Itoa(int(bar.ID))}
					hx-swap="innerHTML"
					hx-target="#pop-up"
				>Legg til bryggeri</button>
            }
            if bar.TimedPrices && len(hkeys) > 0 {
                <h3>Tidsbestemte priser:</h3>
                <ul>
                    for _, hkey := range hkeys {
                        <li>
							<div>
								<span id={"happy_price_" + strconv.Itoa(int(hkey.ID))}>{hkey.Price}</span>,- <span>{daysFromBitmask(hkey.Day)}</span>, fra <span>{hkey.FromTime.Format("15:04")}</span>
								til <span>{hkey.UntilTime.Format("15:04")}</span>
							</div>
							if hkey.Price != hkey.Pint {
								<div>
									<p>*Tilsvarer <span id={"happy_pint_" + strconv.Itoa(int(hkey.ID))}>{hkey.Pint}</span>,- for en halvliter</p>
								</div>
							}
							<div>
								<p>Pris sjekket: <span id={"happy_checked_" + strconv.Itoa(int(hkey.ID))}>{FormatNorwegianDate(hkey.PriceChecked)}</span></p>
								<button
									class={btnPrimary}
									hx-get={"/logic/price-confirmer?type=hkey&id=" + strconv.Itoa(int(hkey.ID))}
									hx-swap="innerHTML"
									hx-target="#pop-up"
								>Prisen stemmer</button>
								<button
									class={btnSecondary}
									hx-get={fmt.Sprintf("/logic/price-updater?type=hkey&id=%d&size=%s", hkey.ID, strconv.FormatFloat(hkey.Size, 'f', 1, 64))}
									hx-swap="innerHTML"
									hx-target="#pop-up"
								>Prisen er feil</button>
							</div>
						</li>
                    }
                </ul>
            }
        </div>
    </section>   
}

templ BreweryPicker(barID string, brews []models.Brewery) {
	<div class={popupContainer} id="brewery-picker">
		<p>Så du vet hvilket bryggeri baren fører? Hjelp oss med å legge til bryggeri der vi ikke vet!</p>
        <p>Husk: vi linker kun det billigste bryggeriet man får servert på baren.</p>
		<p>Mangler vi bryggeriet? Send oss en mail på <a href="mailto:pilsguiden@hotmail.com" class="font-semibold">pilsguiden@hotmail.com</a></p>
		<p>Velg bryggeri:</p>
		<form hx-post="/logic/update-brewery" hx-target="#pop-up" hx-swap="innerHTML">
			<select name="new_brew" class={curtain}>
				<option disabled selected>Ikke valgt</option>
			for _, brew := range brews {
				<option value={brew.Name}>{brew.Name}</option>
			}
			</select>
			<button
				type="button"
				class={btnWarning}
				hx-get="/logic/do-nothing"
				hx-target="#pop-up"
				hx-swap="innerHTML"
			>Avbryt</button>
			<button type="submit" name="bar_id" value={barID} class={btnPrimary}>Oppdater</button>
		</form>
    </div>
}

templ PriceUpdater(updateType, id, size string) {
	<div class={popupContainer} id="price-updater">
		<p>Har baren oppdatert prisen? Hjelp oss med å holde siden oppdatert!</p>
		<p>Skriv inn prisen du betalte, så tar vi oss av konverteringen til halvliterspris
		dersom baren har falt offer for shrinkflation og ikke lenger tilbyr
		gullstandarden for servingerstørrelse i metriske land.</p>
		<p>Har baren byttet serveringsstørrelse? Send oss en mail på <a href="mailto:pilsguiden@hotmail.com" class="font-semibold">pilsguiden@hotmail.com</a></p>
		<form hx-post="/logic/update-price" hx-target="#pop-up" hx-swap="innerHTML">
			<label for="price" class="block">Ny pris:</label>
			<input type="number" id="new_price" name="new_price" required class="w-full border p-2" />
			<input hidden type="decimal" id="size" name="size" value={size} />
			<button
				type="button"
				class={btnWarning}
				hx-get="/logic/do-nothing"
				hx-target="#pop-up"
				hx-swap="innerHTML"
			>Avbryt</button>
			<button type="submit" name="update_target" value={updateType + ":" + id} class={btnPrimary}>Oppdater</button>
		</form>
	</div>
}

templ PriceConfirmer(updateType, id string) {
	<div class={popupContainer} id="price-confirmer">
		<p>Har baren fortsatt samme pris? Hjelp oss med å holde siden oppdatert ved å bekrefte at prisen fortsatt stemmer!</p>
		<button
			class={btnWarning}
			type="button"
			hx-get="/logic/do-nothing"
			hx-target="#pop-up"
			hx-swap="innerHTML"
		>Avbryt</button>
		<button
			class={btnPrimary}
			type="submit"
			name="update_target"
			value={updateType + ":" + id}
			hx-post="/logic/confirm-price"
			hx-target="#pop-up"
			hx-swap="innerHTML"
		>Bekreft</button>
	</div>
}